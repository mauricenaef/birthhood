Herausforderungen:
- id bei firebase
- Firebase-services können schlecht gekapselt werden.
- google maps API zu viele Anfragen
- firestore: zu viele Anfragen

Fragen:

- firebase - usergesteuertes speichen / rechteübeprüfung
=> ab min. 30 oder so
https://firebase.google.com/docs/database/security/
- routing bei unterseiten (z.B. Birthplaces => map, list, detail)
=> wenn über Routes, dann mit ID-parameter oder über Services.

https://blog.thoughtram.io/angular/2016/02/22/angular-2-change-detection-explained.html
changeDetection: ChangeDetectionStrategy.OnPush

  
todo (code):
- Eigenes Modul erstellen.
  - Login
  - Experience
  - Birthplaces könnte auch eigenes Modul sein.
- add Random Experiences for more Data => for each Birthplace add 5 Random Experiences
 => nicht nötig, da wir so den Blank Slate verwenden können
- migrate to database for Spatial queries and GeoFire
- errorhandling
- unit-tests
- routeGuards => beispiel ok.
- uploader als es6 Module definieren
- firebase security
  - zur zeit wird einfach das schreiben nur zugelassen, wenn der User authentifiziert ist.
  - man müsste noch ein check machen, damit Einträge eines Users nicht überschrieben werden können.
- filter immer der Methode mitgeben 
- Address-Search. Aber den lassen wir weg und weisen daraufhin in der Präsentation
- name vs id bei labels für
- Hinweis bei suche, ob filter aktiv
- search-reset button / cross
- pipe für Searchresult- highlighting des Searchterms
- loading Component
- filter in localstorage speichern.
- recalculate Score => als Firestore function? so kann sie geschützt werden....
- google maps link fürs routing
https://www.google.com/maps/dir/?api=1&destination=bonaduz
- nie beide Filter leer!
- teilweise kommen keine Pins. Wieso? => abfangen


- Design Frage: wenn man aus der Details ansicht zurück zur Liste/Karte kommt. Was möchte man dann sehen?
Alle pins? den vorher angeklickten pin? nur etwas vom angeklickten Pin rauszoomen?
 => jetzt wird zoomlevel in Birthplace-list gesetzt und geolocation in birthplace-map
- Beim Starten:
  - wenn keine GeoLocation da ist, was zeigen wir dann? alles?
   Ev. Sprache auslesen und auf Sprachregion zoomen.
  - wenn eine gefunden wird:  mind 4-5 Birthplaces darstellen. Auf diesen Extent zoomen.
- filter-button wird zu back/home button


- angular-cli.json: scripts registrieren, z.B. jQuery





- angularfirebase spinner https://angularfirebase.com/lessons/show-loading-spinners-for-firebase-data/
- ng4 loading spinner https://www.npmjs.com/package/ng4-loading-spinner



https://blog.realworldfullstack.io/real-world-app-part-16-from-firebase-to-firestore-f6c494e80237
https://firebase.google.com/docs/firestore/security/get-started

request.auth.uid 
0bd55101ecab9a242ec823f1c0b5a5e198aebe80
request.auth.token.email 
birthhood@appspot.gserviceaccount.com



******************************
service cloud.firestore {
  match /databases/{database}/documents {
    match /birthplaces/{birthplace} {
      allow read;
      allow create: if request.auth.token.email == 'birthhood@appspot.gserviceaccount.com';
      allow update: if request.auth.token.email == 'birthhood@appspot.gserviceaccount.com';
    }

    match /birthexperiences/{birthexperience} {
      allow read;
      allow create: request.auth.token.email == 'birthhood@appspot.gserviceaccount.com'; //for service account
      allow update: if resource.data.user_id == request.auth.uid || request.auth.token.email == 'birthhood@appspot.gserviceaccount.com';
    }

    match /{document=**} {
      allow read;
      
    }
  }
}
******************************
https://github.com/firebase/functions-samples
https://blog.realworldfullstack.io/real-world-app-part-12-cloud-functions-for-firebase-8359787e26f3
******************************
const functions = require('firebase-functions');

const admin = require('firebase-admin');
admin.initializeApp(functions.config().firebase);
var db = admin.firestore();

exports.myFunctionName = functions.firestore
  .document('birthexperiences/{documentId}')
  .onWrite((event) => {
    let birthplaceid = event.data.get('birthplace_id');
    let experiences = db.collection('birthexperiences').where('birthplace_id', '==', birthplaceid);
      
  });

******************************
Notizen Tobias:
css-reset: alles auf 0
css-normalize: alles auf gewisse werte


https://foundation.zurb.com/sites/docs/

_settings.scss
styles.scss

fixed: eigenes Element, nicht im Flow des Bodys
absolute: hat keine Width und height im Bezug aufs den Document-Flow
Relative: im document flow, ist Standard, 


abolute-elemente beziehen sich immer auf das nächsthöhere Relative-Element.


visibility: bezieht sich auch auf die DOm-Platzierung und Dimensionen des Doms. 
Mit 0 ist es wie "hidden". Kann über CSS animiert werden.



Firestore:
- kein Geo
- keine multiple range-queries auf mehreren feldern
- keine not-operatoren
- keine or-operatoren




SASS:
Import files immer mit Underscore


CSS Namespaces




https://holidaypirates.github.io/nucleus/

> nucleus init
> src/**/*.scss
> static/styleguide
> 