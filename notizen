Herausforderungen:
- id bei firebase

Fragen:

- firebase - usergesteuertes speichen / rechteübeprüfung
=> ab min. 30 oder so
https://firebase.google.com/docs/database/security/
- routing bei unterseiten (z.B. Birthplaces => map, list, detail)
=> wenn über Routes, dann mit ID-parameter oder über Services.

https://blog.thoughtram.io/angular/2016/02/22/angular-2-change-detection-explained.html
changeDetection: ChangeDetectionStrategy.OnPush

  
todo (code):
- Eigenes Modul erstellen.
  - Login
  - Experience
  - Birthplaces könnte auch eigenes Modul sein.
- filtern der Birthplaces
- add Random Experiences for more Data => for each Birthplace add 5 Random Experiences
 => nicht nötig, da wir so den Blank Slate verwenden können
- experience Erfassungsmaske
- errorhandling
- unit-tests
- routeGuards
- uploader als es6 Module definieren
- firebase security
  - zur zeit wird einfach das schreiben nur zugelassen, wenn der User authentifiziert ist.
- filter immer der Methode mitgeben
- Address-Search. Aber den lassen wir weg und weisen daraufhin in der Präsentation
-name vs id bei labels für
- wie können wir die einzelnen sass-files der components auch wirklich verwenden?
- Hinweis bei suche, ob filter aktiv



- Design Frage: wenn man aus der Details ansicht zurück zur Liste/Karte kommt. Was möchte man dann sehen?
Alle pins? den vorher angeklickten pin? nur etwas vom angeklickten Pin rauszoomen?
 => jetzt wird zoomlevel in Birthplace-list gesetzt und geolocation in birthplace-map
- Beim Starten:
  - wenn keine GeoLocation da ist, was zeigen wir dann? alles?
   Ev. Sprache auslesen und auf Sprachregion zoomen.
  - wenn eine gefunden wird:  mind 4-5 Birthplaces darstellen. Auf diesen Extent zoomen.



- angular-cli.json: scripts registrieren, z.B. jQuery




- filter in localstorage speichern.
- Anfrage an Firestore mit Filter machen. => geht nicht richtig.
- recalculate Score
- nie beide leer
- google maps link fürs routing
- Unit tests
- errorhandling

- routeGuards in user-experience-add form-nav
- angularfirebase spinner https://angularfirebase.com/lessons/show-loading-spinners-for-firebase-data/
- ng4 loading spinner https://www.npmjs.com/package/ng4-loading-spinner


css-reset: alles auf 0
css-normalize: alles auf gewisse werte



fixed: eigenes Element, nicht im Flow des Bodys
absolute: hat keine Width und height im Bezug aufs den Document-Flow
Relative: im document flow, ist Standard, 


abolute-elemente beziehen sich immer auf das nächsthöhere Relative-Element.


visibility: bezieht sich auch auf die DOm-Platzierung und Dimensionen des Doms. 
Mit 0 ist es wie "hidden". Kann über CSS animiert werden.



Firestore:
- kein Geo
- keine multiple range-queries auf mehreren feldern
- keine not-operatoren
- keine or-operatoren




SASS:
Import files immer mit Underscore


CSS Namespaces




https://holidaypirates.github.io/nucleus/

> nucleus init
> src/**/*.scss
> static/styleguide
> 